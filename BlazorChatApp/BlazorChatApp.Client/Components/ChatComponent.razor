@if (ToUser is not null && ConnectedUsers is not null && ConnectedUsers.Count > 0)
{
    <div class="card">
        <div class="card-header">
            Chatting with @ToUser.UserName
        </div>
        <div class="overflow-auto" style="min-height: 200px">
            <ul class="list-group">
                @foreach (var message in ToUser.Messages)
                {
                    var fromUserName = ConnectedUsers.FirstOrDefault(u => u.UserId == message.FromUserId)?.UserName;

                    <li class="list-group-item d-flex align-items-start message-item">
                        <img src="/images/Efaz_avater.png" alt="Efaz" class="rounder-circle me-3" width="40px" height="40px" />
                        <div>
                            <b>@fromUserName</b><br />
                            @message.Message
                        </div>
                    </li>
                }
            </ul>
        </div>
        <div class="card-footer">
            <div class="input-group">
                <input type="text"
                class="form-control me-2"
                placeholder="Type your message here..."
                @bind="newMessage" 
                @bind:event="oninput" 
                @onkeydown="HandleKeyPress" />
                <button class="btn btn-primary" @onclick="SendMessage">Send</button>
                </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public string? FromUserId { get; set; }

    [Parameter]
    public ConnectedUser? ToUser { get; set; }

    [Parameter]
    public List<ConnectedUser>? ConnectedUsers { get; set; }

    [Parameter]
    public HubConnection? hubConnection { get; set; }

    public string newMessage { get; set; } = string.Empty;

    private async Task SendMessage()
    {
        if(hubConnection is not null && ToUser is not null && !string.IsNullOrEmpty(newMessage))
        {
            await hubConnection.InvokeAsync("ForwordMessage", this.FromUserId, ToUser.ConnectionId, newMessage);

            ToUser.Messages.Add(new ChatMessage
            {
                FromUserId = this.FromUserId,
                ToUserId = ToUser.UserId,
                Message = newMessage

            });

            newMessage = string.Empty;
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if(e.Key == "Enter")
        {
            await SendMessage();
        }
    }
}
